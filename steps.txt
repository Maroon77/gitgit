1、声明本机器的name和email(不然不能向仓库提交(commit)本地文件)
   $ git config --global user.name "Your Name"
   $ git config --global user.email "email@example.com"


2、创建空目录
   $ mkdir "目录名称A"
   $ cd "目录名称A"   //打开这个目录
   $ pwd             //显示当前目录

3、将这个空目录变成git可以管理的仓库
   $git init

4、添加一个文件B到版本库
   $git add 文件B    （PS：以空格键隔开 可以添加多个文件）
   $git commit -m "对文件B(或者所以add的文件)的说明"   （commit可以一次性提交多个add的文件）

5、$git status命令可以让我们时刻掌握仓库当前的状态
   $git diff 文件B 可以看出对文件B做了什么修改

6、提交修改和提交新文件到版本库的步骤是一样的
   $git add 修改的文件B   (在$git commit之前可以使用$git status查看当前版本库的状态，作了什么修改)
   $git commit -m "描述"
   (PS:要随时掌握工作区的状态，使用git status命令。
    如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
    )

7、版本回退($git reset --hard 回退的版本)（PS:HEAD^/HEAD^^/HEAD~100/commit id）
   HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

   穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

   要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本

8、理解暂存区：Git跟踪并管理的是修改，而非文件。每次修改，如果不add到暂存区，那就不会加入到commit中

9、撤销修改,这个文件回到最近一次git commit或git add时的状态
   $git checkout -- 文件名